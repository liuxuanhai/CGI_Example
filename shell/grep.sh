#!/bin/bash
:<<'EOF'
g r e p支持基本正
则表达式，也支持其扩展集。g r e p有三种变形，即：
G r e p：标准g r e p命令，本章大部分篇幅集中讨论此格式。
E g r e p：扩展g r e p，支持基本及扩展的正则表达式，但不支持\ q模式范围的应用，与之相
对应的一些更加规范的模式，这里也不予讨论。
F g r e p：快速g r e p。允许查找字符串而不是一个模式。不要误解单词f a s t，实际上它与g r e p
速度相当。

• grep（参数）选项。
• 匹配g r e p的一般模式。
• 只匹配字母或数字，或两者混用。
• 匹配字符串范围。

grep
g r e p一般格式为：
grep [选项]基本正则表达式[文件]
这里基本正则表达式可为字符串。

在g r e p命令中输入字符串参数时，最好将其用双引号括起来。例如：“m y s t r i n g”。这样做
有两个原因，一是以防被误解为s h e l l命令，二是可以用来查找多个单词组成的字符串，例如：
“jet plane”，如果不用双引号将其括起来，那么单词p l a n e将被误认为是一个文件，查询结果
将返回“文件不存在”的错误信息。
在调用变量时，也应该使用双引号，诸如： g r e p“$ M Y VA R”文件名，如果不这样，将
没有返回结果。
在调用模式匹配时，应使用单引号。

常用的g r e p选项有：
-c 只输出匹配行的计数。
-i 不区分大小写（只适用于单字符）。
-h 查询多文件时不显示文件名。
-l 查询多文件时只输出包含匹配字符的文件名。
-n 显示匹配行及行号。
-s 不显示不存在或无匹配文本的错误信息。
-v 显示不包含匹配文本的所有行。

行匹配
$ grep -c "48"data.f
$ 4
g r e p返回数字4，意义是有4行包含字符串“4 8”

精确匹配实际上应精确抽取只包含4 8的各行。注意在每个匹配模式中抽取字符串
后有一个< Ta b >键，所以应操作如下：
grep "48<tab>" data.txt
< Ta b >表示点击t a b键。
使用g r e p抽取精确匹配的一种更有效方式是在抽取字符串后加\ >。假定现在精确抽取4 8，
方法如下：
grep '48\>' data.txt

大小写敏感
缺省情况下， g r e p是大小写敏感的，如要查询大小写不敏感字符串，必须使用- i开关


EOF
