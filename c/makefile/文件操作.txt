一、编译时的文件搜索
一般来说执行make时只会在当前目录去寻找文件，当然也可以使用-I dir的方式进行指定

还有一种方法使用变量或者关键字:
VPATH是一个特殊的关键字，如果make找不到文件就会到这个变量所指定的目录下去查找:

VPATH = src:../Include

':'是用来分割多个路径的，在前面的查找优先

vpath是关键字，与VPATH类似，但是更灵活，它可以指定不通的文件的查找位置:

1、vpath <pattern> <directories>
为符合模式<pattern>的文件指定搜索目录<directories>。
如:
vpath %.h	../Include
指定.h文件到../Include目录下去找

vpath %.h	../Include:Src
vpath % 	Blish
vpath %.h	Makehead

以上的查找同样顺序按先后出现的位置

2、vpath <pattern>
清除符合模式<pattern>的文件的搜索目录。
如:
vpath %.h
那么之前定的的.h文件的查找目录就无效

3、vpath
清除所有已被设置好了的文件搜索目录
如:
vpath
则完全清除

二、引用其他的Makefile文件
与C语言类似使用include 即可:
include ../Rules.mk ../xxx.make $(SOME_MAKE)
如果 make 执行时，有“-I”或“--include-dir”参数，那么 make 就会在这个参数
所指定的目录下去寻找
